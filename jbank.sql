-- ========================
-- Drop das tabelas
-- ========================

DROP TABLE IF EXISTS seguro CASCADE;
DROP TABLE IF EXISTS cartao CASCADE;
DROP TABLE IF EXISTS conta CASCADE;
DROP TABLE IF EXISTS endereco_cliente CASCADE;
DROP TABLE IF EXISTS cliente CASCADE;
DROP TABLE IF EXISTS politica_de_taxas CASCADE;
DROP TABLE IF EXISTS usuario CASCADE;

-- ========================
-- Tabela: usuario
-- ========================
CREATE TABLE IF NOT EXISTS usuario (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(255) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL CHECK (role IN ('ADMIN', 'CLIENTE')),
    PRIMARY KEY (id)
);

-- ========================
-- Tabela: cliente
-- ========================
CREATE TABLE IF NOT EXISTS cliente (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(100) NOT NULL,
    cpf VARCHAR(11) NOT NULL UNIQUE,
    categoria VARCHAR(20) NOT NULL CHECK (categoria IN ('COMUM','PREMIUM','SUPER')),
    data_nascimento DATE NOT NULL,
    usuario_id BIGINT NOT NULL UNIQUE,
	PRIMARY KEY (id),
    CONSTRAINT fk_cliente_usuario FOREIGN KEY (usuario_id) REFERENCES usuario(id)
);

-- TABELA ENDERECO_CLIENTE
CREATE TABLE IF NOT EXISTS endereco_cliente (
    id BIGSERIAL PRIMARY KEY,
    cep VARCHAR(10),
    rua VARCHAR(255),
    numero INT,
    complemento VARCHAR(100),
    bairro VARCHAR(100),
    cidade VARCHAR(100),
    estado CHAR(2),
    endereco_principal BOOLEAN,
    cliente_id BIGINT NOT NULL,
    CONSTRAINT fk_endereco_cliente FOREIGN KEY (cliente_id) REFERENCES cliente(id)
);

-- ========================
-- Tabela: conta
-- ========================
CREATE TABLE IF NOT EXISTS conta (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    numero_conta VARCHAR(255) NOT NULL UNIQUE,
    saldo NUMERIC(19,2) NOT NULL,
    moeda VARCHAR(10) NOT NULL CHECK (moeda IN ('BRL','EUR','USD')),
    cliente_id BIGINT NOT NULL,
    data_criacao DATE NOT NULL,
    tipo_conta VARCHAR(20) NOT NULL CHECK (tipo_conta IN ('CORRENTE', 'POUPANCA', 'INTERNACIONAL')),

    -- campos espec√≠ficos por tipo
    tarifa_manutencao NUMERIC(19,2), -- para CORRENTE e INTERNACIONAL
    taxa_rendimento NUMERIC(5,4),   -- para POUPANCA
    saldo_em_reais NUMERIC(19,2),    -- para INTERNACIONAL

	PRIMARY KEY (id),
    CONSTRAINT fk_conta_cliente FOREIGN KEY (cliente_id) REFERENCES cliente(id)
);

-- ========================
-- Tabela: cartao
-- ========================
CREATE TABLE IF NOT EXISTS cartao (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    tipo_cartao VARCHAR(31) NOT NULL CHECK (tipo_cartao IN ('CREDITO', 'DEBITO')),
    numero_cartao VARCHAR(255) NOT NULL UNIQUE,
    conta_id BIGINT NOT NULL,
    status VARCHAR(10) NOT NULL CHECK (status IN ('ATIVO', 'INATIVO')),
    senha VARCHAR(255) NOT NULL,
    data_emissao DATE NOT NULL,
    data_vencimento DATE NOT NULL,
    taxa_utilizacao NUMERIC(5,4),
	limite NUMERIC(19,2),
	limite_atual NUMERIC(19,2),

    -- CREDITO
    total_fatura NUMERIC(19,2),
    total_fatura_paga NUMERIC(19,2),

	PRIMARY KEY (id),
    CONSTRAINT fk_cartao_conta FOREIGN KEY (conta_id) REFERENCES conta(id)
);

-- ========================
-- Tabela: politica_de_taxas
-- ========================
CREATE TABLE IF NOT EXISTS politica_de_taxas (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    categoria VARCHAR(20) NOT NULL CHECK (categoria IN ('COMUM','PREMIUM','SUPER')),
    tarifa_manutencao_mensal_conta_corrente NUMERIC(10,2),
    rendimento_percentual_mensal_conta_poupanca NUMERIC(10,5),
    tarifa_manutencao_conta_internacional NUMERIC(10,2),
    limite_cartao_credito NUMERIC(19,2),
    limite_diario_debito NUMERIC(19,2),
    tarifa_seguro_viagem NUMERIC(10,2),
    tarifa_seguro_fraude NUMERIC(10,2),
	valor_apolice_fraude NUMERIC(10,2),
	valor_apolice_viagem NUMERIC(10,2),
	PRIMARY KEY (id)
);

-- ========================
-- Dados iniciais para politica_de_taxas
-- ========================
INSERT INTO politica_de_taxas (
    categoria, tarifa_manutencao_mensal_conta_corrente, rendimento_percentual_mensal_conta_poupanca,
	tarifa_manutencao_conta_internacional,
    limite_cartao_credito, limite_diario_debito, tarifa_seguro_viagem,
	tarifa_seguro_fraude,
	valor_apolice_fraude, valor_apolice_viagem
) VALUES
('COMUM', 12.00, 0.005, 0.00, 1000.00, 500.00, 50.00, 0.00, 5000.00, 10000.00),
('SUPER', 8.00, 0.007, 0.00, 5000.00, 2500.00, 50.00, 0.00, 5000.00, 10000.00),
('PREMIUM', 0.00, 0.009, 0.00, 10000.00, 5000.00, 0.00, 0.00, 5000.00, 10000.00);

-- ========================
-- Tabela: seguro
-- ========================
CREATE TABLE IF NOT EXISTS seguro (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    tipo_seguro VARCHAR(20) NOT NULL CHECK (tipo_seguro IN ('FRAUDE','VIAGEM')),
    num_apolice VARCHAR(50) NOT NULL UNIQUE,
    cartao_id BIGINT NOT NULL,
    data_contratacao DATE NOT NULL,
    valor_apolice NUMERIC(19,2) NOT NULL,
    descricao_condicoes VARCHAR(300),
    premio_apolice NUMERIC(19,2) NOT NULL,
    status_seguro VARCHAR(50),
    data_acionamento DATE,
    valor_fraude NUMERIC(19,2),
	PRIMARY KEY (id),
    CONSTRAINT fk_seguro_cartao FOREIGN KEY (cartao_id) REFERENCES cartao(id)
);